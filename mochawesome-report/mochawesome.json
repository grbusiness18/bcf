{
  "stats": {
    "suites": 34,
    "tests": 55,
    "passes": 55,
    "pending": 0,
    "failures": 0,
    "start": "2018-03-28T15:15:51.744Z",
    "end": "2018-03-28T15:15:52.388Z",
    "duration": 644,
    "testsRegistered": 55,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "54b6a0ae-0062-4333-86ab-879e0b1585d7",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "f4e58373-2de4-4b3e-8cc5-5c389df174ee",
        "title": "Apps",
        "fullFile": "/Users/d058802/Documents/Node/sedacom/test/testapplication.js",
        "file": "/test/testapplication.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [],
        "suites": [
          {
            "uuid": "adaa575b-facd-495a-af28-7c3bd8728b34",
            "title": "/POST create new apps",
            "fullFile": "/Users/d058802/Documents/Node/sedacom/test/testapplication.js",
            "file": "/test/testapplication.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "it should not POST apps without recast config object or app description",
                "fullTitle": "Apps /POST create new apps it should not POST apps without recast config object or app description",
                "timedOut": false,
                "duration": 61,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var app = {\n    description: \"Test app mocha\"\n}\nchai.request(server)\n    .post('/apps/create')\n    .set('content-type', 'application/json')\n    .send(app).end((err, res) => {\n        expect(res).to.have.status(405);\n        done()\n    })",
                "err": {},
                "isRoot": false,
                "uuid": "24da1d7e-87b2-429f-a394-9ab158f33872",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "it should POST apps successfully",
                "fullTitle": "Apps /POST create new apps it should POST apps successfully",
                "timedOut": false,
                "duration": 31,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var app = {\n    description: \"Test app mocha\",\n    recast: {\n        token: \"3472987529857892375892\",\n        threshold: 75\n    }\n}\nchai.request(server)\n    .post('/apps/create')\n    .set('content-type', 'application/json')\n    .send(app).end((err, res) => {\n        expect(res).to.have.status(201)\n        expect(res.body).should.have.a('object')\n        newapp = res.body\n        done()\n    })",
                "err": {},
                "isRoot": false,
                "uuid": "d35e07a4-2bb2-43b7-81a4-db8057217068",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "24da1d7e-87b2-429f-a394-9ab158f33872",
              "d35e07a4-2bb2-43b7-81a4-db8057217068"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 92,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "bd8639be-2738-40dc-8024-2e4b19185969",
            "title": "/GET/ALL get all apps",
            "fullFile": "/Users/d058802/Documents/Node/sedacom/test/testapplication.js",
            "file": "/test/testapplication.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "it should GET all apps either empty or filled array",
                "fullTitle": "Apps /GET/ALL get all apps it should GET all apps either empty or filled array",
                "timedOut": false,
                "duration": 16,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai.request(server)\n    .get('/apps/all')\n    .send().end((err, res) => {\n        expect(res).to.have.status(200)\n        res.body.should.have.a('array')\n        done()\n    })",
                "err": {},
                "isRoot": false,
                "uuid": "1c5cbbb2-d4b1-4cce-8d8c-bac8bc1f02c5",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "1c5cbbb2-d4b1-4cce-8d8c-bac8bc1f02c5"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 16,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "5d654553-3b6d-4d82-a8a5-e2022f8359d8",
            "title": "/GET/APPID get app by ID",
            "fullFile": "/Users/d058802/Documents/Node/sedacom/test/testapplication.js",
            "file": "/test/testapplication.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "it should GET the app by ID",
                "fullTitle": "Apps /GET/APPID get app by ID it should GET the app by ID",
                "timedOut": false,
                "duration": 11,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai.request(server)\n    .get('/apps/' + newapp._id)\n    .send().end((err, res) => {\n        expect(res).to.have.status(200)\n        res.body.should.have.a('object')\n        done()\n    })",
                "err": {},
                "isRoot": false,
                "uuid": "9850a0dc-3d95-465f-bdb4-9579aea3d76c",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "9850a0dc-3d95-465f-bdb4-9579aea3d76c"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 11,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "512ade0a-bb55-4051-acb6-c0bf75539b69",
            "title": "/PUT/APPID Update app by ID",
            "fullFile": "/Users/d058802/Documents/Node/sedacom/test/testapplication.js",
            "file": "/test/testapplication.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "it should UPDATE the app by ID",
                "fullTitle": "Apps /PUT/APPID Update app by ID it should UPDATE the app by ID",
                "timedOut": false,
                "duration": 21,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "var app = Â  {\n    description: \"test mocha app by id\"\n}\nchai.request(server)\n    .put('/apps/' + newapp._id)\n    .send(app).end((err, res) => {\n        expect(res).to.have.status(201)\n        res.body.should.have.a('object')\n        expect(res.body.description).to.be.equal(app.description)\n        done()\n    })",
                "err": {},
                "isRoot": false,
                "uuid": "d6932151-96ee-46a2-b826-a02dab03dd66",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "d6932151-96ee-46a2-b826-a02dab03dd66"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 21,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "57910635-786c-4ed0-b8eb-e7da7231e257",
            "title": "Intents",
            "fullFile": "/Users/d058802/Documents/Node/sedacom/test/testapplication.js",
            "file": "/test/testapplication.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [],
            "suites": [
              {
                "uuid": "6c619eff-6074-4fa9-957f-70165934f25c",
                "title": "/POST create new Intents",
                "fullFile": "/Users/d058802/Documents/Node/sedacom/test/testapplication.js",
                "file": "/test/testapplication.js",
                "beforeHooks": [],
                "afterHooks": [],
                "tests": [
                  {
                    "title": "it should not POST Intents without intent name or description",
                    "fullTitle": "Apps Intents /POST create new Intents it should not POST Intents without intent name or description",
                    "timedOut": false,
                    "duration": 5,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var intent = {\n    description: \"Test Intent created by mocha\"\n}\nchai.request(server)\n    .post('/apps/' + newapp._id + '/intents/create')\n    .set('content-type', 'application/json')\n    .send(intent).end((err, res) => {\n        expect(res).to.have.status(405);\n        done()\n    })",
                    "err": {},
                    "isRoot": false,
                    "uuid": "4eacc70c-6729-4f81-a946-3bede2b072c6",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "it should POST apps successfully",
                    "fullTitle": "Apps Intents /POST create new Intents it should POST apps successfully",
                    "timedOut": false,
                    "duration": 12,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var intent = {\n    intent_name: \"mochatestintent\",\n    description: \"Test Intent created by mocha\"\n}\nchai.request(server)\n    .post('/apps/' + newapp._id + '/intents/create')\n    .set('content-type', 'application/json')\n    .send(intent).end((err, res) => {\n        expect(res).to.have.status(201)\n        expect(res.body).should.have.a('object')\n        newintent = res.body\n        done()\n    })",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7413e980-b0f8-4c9c-af52-1db5eb1789cb",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "suites": [],
                "passes": [
                  "4eacc70c-6729-4f81-a946-3bede2b072c6",
                  "7413e980-b0f8-4c9c-af52-1db5eb1789cb"
                ],
                "failures": [],
                "pending": [],
                "skipped": [],
                "duration": 17,
                "root": false,
                "rootEmpty": false,
                "_timeout": 2000
              },
              {
                "uuid": "d720fcdd-c88b-4958-97c1-a2ca27734612",
                "title": "/GET/INTENT/ALL GET ALL Intents",
                "fullFile": "/Users/d058802/Documents/Node/sedacom/test/testapplication.js",
                "file": "/test/testapplication.js",
                "beforeHooks": [],
                "afterHooks": [],
                "tests": [
                  {
                    "title": "it should not GET Intents for invalid APP",
                    "fullTitle": "Apps Intents /GET/INTENT/ALL GET ALL Intents it should not GET Intents for invalid APP",
                    "timedOut": false,
                    "duration": 6,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "chai.request(server)\n    .get('/apps/2347297492346dhakh393/intents/all')\n    .set('content-type', 'application/json')\n    .send().end((err, res) => {\n        expect(res).to.have.status(405)\n        done()\n    })",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c1d497da-9d51-46ff-8019-edcef6b25b67",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "it should GET Intents for valid APP if exists or empty array",
                    "fullTitle": "Apps Intents /GET/INTENT/ALL GET ALL Intents it should GET Intents for valid APP if exists or empty array",
                    "timedOut": false,
                    "duration": 9,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "chai.request(server)\n    .get('/apps/' + newapp._id + '/intents/all')\n    .set('content-type', 'application/json')\n    .send().end((err, res) => {\n        expect(res).to.have.status(200)\n        expect(res.body[0]._id).to.be.equal(newintent._id)\n        done()\n    })",
                    "err": {},
                    "isRoot": false,
                    "uuid": "6753177d-23d7-4aae-9ab1-e98d4f978acb",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "suites": [],
                "passes": [
                  "c1d497da-9d51-46ff-8019-edcef6b25b67",
                  "6753177d-23d7-4aae-9ab1-e98d4f978acb"
                ],
                "failures": [],
                "pending": [],
                "skipped": [],
                "duration": 15,
                "root": false,
                "rootEmpty": false,
                "_timeout": 2000
              },
              {
                "uuid": "d472cd4c-9bf2-486c-ae4f-30cabfcf043e",
                "title": "/GET/INTENT/BYNAME GET Intents by Name",
                "fullFile": "/Users/d058802/Documents/Node/sedacom/test/testapplication.js",
                "file": "/test/testapplication.js",
                "beforeHooks": [],
                "afterHooks": [],
                "tests": [
                  {
                    "title": "it should GET Intents for valid APP if exists or empty array",
                    "fullTitle": "Apps Intents /GET/INTENT/BYNAME GET Intents by Name it should GET Intents for valid APP if exists or empty array",
                    "timedOut": false,
                    "duration": 6,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "chai.request(server)\n    .get('/apps/' + newapp._id + '/intents/name/' + newintent.intent_name)\n    .set('content-type', 'application/json')\n    .send().end((err, res) => {\n        expect(res).to.have.status(200)\n        done()\n    })",
                    "err": {},
                    "isRoot": false,
                    "uuid": "49bcd118-c30d-4771-8b54-1cf9c67eb3ae",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "suites": [],
                "passes": [
                  "49bcd118-c30d-4771-8b54-1cf9c67eb3ae"
                ],
                "failures": [],
                "pending": [],
                "skipped": [],
                "duration": 6,
                "root": false,
                "rootEmpty": false,
                "_timeout": 2000
              },
              {
                "uuid": "409ed08b-2a22-44b8-8a23-b0118966dbb2",
                "title": "/GET/INTENT/BYID GET Intents by ID",
                "fullFile": "/Users/d058802/Documents/Node/sedacom/test/testapplication.js",
                "file": "/test/testapplication.js",
                "beforeHooks": [],
                "afterHooks": [],
                "tests": [
                  {
                    "title": "it should GET Intents for valid APP if exists or empty array",
                    "fullTitle": "Apps Intents /GET/INTENT/BYID GET Intents by ID it should GET Intents for valid APP if exists or empty array",
                    "timedOut": false,
                    "duration": 6,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "chai.request(server)\n    .get('/apps/' + newapp._id + '/intents/' + newintent._id)\n    .set('content-type', 'application/json')\n    .send().end((err, res) => {\n        expect(res).to.have.status(200)\n        done()\n    })",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ecc30c23-39f6-4bcc-83b8-cc54151cb570",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "suites": [],
                "passes": [
                  "ecc30c23-39f6-4bcc-83b8-cc54151cb570"
                ],
                "failures": [],
                "pending": [],
                "skipped": [],
                "duration": 6,
                "root": false,
                "rootEmpty": false,
                "_timeout": 2000
              },
              {
                "uuid": "5daf819c-b3ae-4bfc-816c-694e1427b8dc",
                "title": "/PUT/INTENT/BYID UPDATE Intents by ID",
                "fullFile": "/Users/d058802/Documents/Node/sedacom/test/testapplication.js",
                "file": "/test/testapplication.js",
                "beforeHooks": [],
                "afterHooks": [],
                "tests": [
                  {
                    "title": "it should UPDATE Intents for valid APP if exists",
                    "fullTitle": "Apps Intents /PUT/INTENT/BYID UPDATE Intents by ID it should UPDATE Intents for valid APP if exists",
                    "timedOut": false,
                    "duration": 10,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "newintent.description = \"UPdated new Intent description\"\nchai.request(server)\n    .put('/apps/' + newapp._id + '/intents/' + newintent._id)\n    .set('content-type', 'application/json')\n    .send(newintent).end((err, res) => {\n        expect(res).to.have.status(201)\n        var olddata = newintent\n        var newdata = res.body\n        expect(newdata.description).to.be.equal(olddata.description)\n        expect(newdata.entities.length).to.be.equal(olddata.entities.length)\n        expect(newdata.responses.length).to.be.equal(olddata.responses.length)\n        expect(newdata.actions.length).to.be.equal(olddata.actions.length)\n        expect(newdata.fallback).to.be.equal(olddata.fallback)\n        newintent = res.body\n        done()\n    })",
                    "err": {},
                    "isRoot": false,
                    "uuid": "db04ee88-22e1-42ff-8a37-1112b94b3592",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "suites": [],
                "passes": [
                  "db04ee88-22e1-42ff-8a37-1112b94b3592"
                ],
                "failures": [],
                "pending": [],
                "skipped": [],
                "duration": 10,
                "root": false,
                "rootEmpty": false,
                "_timeout": 2000
              },
              {
                "uuid": "4e2b6a56-208e-4a2a-bf85-f4e125b1f445",
                "title": "Intents-Response",
                "fullFile": "/Users/d058802/Documents/Node/sedacom/test/testapplication.js",
                "file": "/test/testapplication.js",
                "beforeHooks": [],
                "afterHooks": [],
                "tests": [],
                "suites": [
                  {
                    "uuid": "3e5bb055-2607-4b18-a051-5b3fe47249da",
                    "title": "/POST create new Responses for the INTENT ID",
                    "fullFile": "/Users/d058802/Documents/Node/sedacom/test/testapplication.js",
                    "file": "/test/testapplication.js",
                    "beforeHooks": [],
                    "afterHooks": [],
                    "tests": [],
                    "suites": [
                      {
                        "uuid": "3f71435d-41ab-4dc2-82d4-8ba524c84ae1",
                        "title": "/POST create new Responses for the INTENT ID",
                        "fullFile": "/Users/d058802/Documents/Node/sedacom/test/testapplication.js",
                        "file": "/test/testapplication.js",
                        "beforeHooks": [],
                        "afterHooks": [],
                        "tests": [
                          {
                            "title": "it should FAIL for invalid APP ID or INTENT ID",
                            "fullTitle": "Apps Intents Intents-Response /POST create new Responses for the INTENT ID /POST create new Responses for the INTENT ID it should FAIL for invalid APP ID or INTENT ID",
                            "timedOut": false,
                            "duration": 4,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "code": "var response = {\n    text: \"Test responses created by mocha\"\n}\nchai.request(server)\n    .post('/apps/472942942/intents/djadaldjaldj/responses/create')\n    .set('content-type', 'application/json')\n    .send(response).end((err, res) => {\n        expect(res).to.have.status(500);\n        done()\n    })",
                            "err": {},
                            "isRoot": false,
                            "uuid": "468b96d4-9cac-4c63-abee-30fe6a07418e",
                            "isHook": false,
                            "skipped": false
                          },
                          {
                            "title": "it should not POST RESPONSES without TEXT propery",
                            "fullTitle": "Apps Intents Intents-Response /POST create new Responses for the INTENT ID /POST create new Responses for the INTENT ID it should not POST RESPONSES without TEXT propery",
                            "timedOut": false,
                            "duration": 6,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "code": "var response = {\n    texts: \"Test responses created by mocha\"\n}\nchai.request(server)\n    .post('/apps/' + newapp._id + '/intents/' + newintent._id + '/responses/create')\n    .set('content-type', 'application/json')\n    .send(response).end((err, res) => {\n        expect(res).to.have.status(500);\n        done()\n    })",
                            "err": {},
                            "isRoot": false,
                            "uuid": "df3eba55-12ad-4479-bfac-81016ffc5c0f",
                            "isHook": false,
                            "skipped": false
                          },
                          {
                            "title": "it should POST RESPONSES successfully",
                            "fullTitle": "Apps Intents Intents-Response /POST create new Responses for the INTENT ID /POST create new Responses for the INTENT ID it should POST RESPONSES successfully",
                            "timedOut": false,
                            "duration": 14,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "code": "var response = {\n    text: \"Test responses created by mocha\"\n}\nchai.request(server)\n    .post('/apps/' + newapp._id + '/intents/' + newintent._id + '/responses/create')\n    .set('content-type', 'application/json')\n    .send(response).end((err, res) => {\n        expect(res).to.have.status(201)\n        expect(res.body).should.have.a('object')\n        newresponse = res.body.responses[0]\n        done()\n    })",
                            "err": {},
                            "isRoot": false,
                            "uuid": "c0703253-e68c-4c35-a69c-1dcda32675b9",
                            "isHook": false,
                            "skipped": false
                          }
                        ],
                        "suites": [],
                        "passes": [
                          "468b96d4-9cac-4c63-abee-30fe6a07418e",
                          "df3eba55-12ad-4479-bfac-81016ffc5c0f",
                          "c0703253-e68c-4c35-a69c-1dcda32675b9"
                        ],
                        "failures": [],
                        "pending": [],
                        "skipped": [],
                        "duration": 24,
                        "root": false,
                        "rootEmpty": false,
                        "_timeout": 2000
                      },
                      {
                        "uuid": "efa8ffdd-997f-447b-8983-89fac5169022",
                        "title": "/GET/RESPONSES/ALL GET ALL RESPONSES",
                        "fullFile": "/Users/d058802/Documents/Node/sedacom/test/testapplication.js",
                        "file": "/test/testapplication.js",
                        "beforeHooks": [],
                        "afterHooks": [],
                        "tests": [
                          {
                            "title": "it should not GET RESPONSES for invalid APP ID or INTENT ID",
                            "fullTitle": "Apps Intents Intents-Response /POST create new Responses for the INTENT ID /GET/RESPONSES/ALL GET ALL RESPONSES it should not GET RESPONSES for invalid APP ID or INTENT ID",
                            "timedOut": false,
                            "duration": 5,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "code": "chai.request(server)\n    .get('/apps/2347297492346dhakh393/intents/734hajdwedjw/responses/all')\n    .set('content-type', 'application/json')\n    .send().end((err, res) => {\n        expect(res).to.have.status(500)\n        done()\n    })",
                            "err": {},
                            "isRoot": false,
                            "uuid": "e5549394-0677-4d90-8c46-1ba5f12451bc",
                            "isHook": false,
                            "skipped": false
                          },
                          {
                            "title": "it should GET ALL respones for valid APP if exists or empty array",
                            "fullTitle": "Apps Intents Intents-Response /POST create new Responses for the INTENT ID /GET/RESPONSES/ALL GET ALL RESPONSES it should GET ALL respones for valid APP if exists or empty array",
                            "timedOut": false,
                            "duration": 10,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "code": "chai.request(server)\n    .get('/apps/' + newapp._id + '/intents/' + newintent._id + '/responses/all')\n    .set('content-type', 'application/json')\n    .send().end((err, res) => {\n        expect(res).to.have.status(200)\n        res.body.should.be.an('array')\n        done()\n    })",
                            "err": {},
                            "isRoot": false,
                            "uuid": "6c7a6c7b-b647-46a0-a2db-fe30c9602e00",
                            "isHook": false,
                            "skipped": false
                          }
                        ],
                        "suites": [],
                        "passes": [
                          "e5549394-0677-4d90-8c46-1ba5f12451bc",
                          "6c7a6c7b-b647-46a0-a2db-fe30c9602e00"
                        ],
                        "failures": [],
                        "pending": [],
                        "skipped": [],
                        "duration": 15,
                        "root": false,
                        "rootEmpty": false,
                        "_timeout": 2000
                      },
                      {
                        "uuid": "9dbf6317-d7e4-433f-b8b7-a1a6b8131c9c",
                        "title": "/PUT/RESPONSES/ALL UPDATE Response BY ID",
                        "fullFile": "/Users/d058802/Documents/Node/sedacom/test/testapplication.js",
                        "file": "/test/testapplication.js",
                        "beforeHooks": [],
                        "afterHooks": [],
                        "tests": [
                          {
                            "title": "it should not UPDATE RESPONSES for invalid APP ID or INTENT ID",
                            "fullTitle": "Apps Intents Intents-Response /POST create new Responses for the INTENT ID /PUT/RESPONSES/ALL UPDATE Response BY ID it should not UPDATE RESPONSES for invalid APP ID or INTENT ID",
                            "timedOut": false,
                            "duration": 5,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "code": "chai.request(server)\n    .put('/apps/2347297492346dhakh393/intents/734hajdwedjw/responses/all')\n    .set('content-type', 'application/json')\n    .send().end((err, res) => {\n        expect(res).to.have.status(500)\n        done()\n    })",
                            "err": {},
                            "isRoot": false,
                            "uuid": "58c2e6c5-75ff-4611-aaff-7da1ee95d90e",
                            "isHook": false,
                            "skipped": false
                          },
                          {
                            "title": "it should not UPDATE RESPONSES without data",
                            "fullTitle": "Apps Intents Intents-Response /POST create new Responses for the INTENT ID /PUT/RESPONSES/ALL UPDATE Response BY ID it should not UPDATE RESPONSES without data",
                            "timedOut": false,
                            "duration": 4,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "code": "chai.request(server)\n    .put('/apps/' + newapp._id + '/intents/' + newintent._id + '/responses/' + newresponse._id)\n    .set('content-type', 'application/json')\n    .send().end((err, res) => {\n        expect(res).to.have.status(500)\n        done()\n    })",
                            "err": {},
                            "isRoot": false,
                            "uuid": "3f5946b3-83c3-4e3e-8b4d-bdc97bab33ab",
                            "isHook": false,
                            "skipped": false
                          },
                          {
                            "title": "it should UPDATE RESPONSES",
                            "fullTitle": "Apps Intents Intents-Response /POST create new Responses for the INTENT ID /PUT/RESPONSES/ALL UPDATE Response BY ID it should UPDATE RESPONSES",
                            "timedOut": false,
                            "duration": 12,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "code": "var response = {\n    text: \"test response updated mocha\"\n}\nchai.request(server)\n    .put('/apps/' + newapp._id + '/intents/' + newintent._id + '/responses/' + newresponse._id)\n    .set('content-type', 'application/json')\n    .send(response).end((err, res) => {\n        expect(res).to.have.status(201)\n        done()\n    })",
                            "err": {},
                            "isRoot": false,
                            "uuid": "36bc2d42-bc96-4147-b451-bfe68bdfd60d",
                            "isHook": false,
                            "skipped": false
                          }
                        ],
                        "suites": [],
                        "passes": [
                          "58c2e6c5-75ff-4611-aaff-7da1ee95d90e",
                          "3f5946b3-83c3-4e3e-8b4d-bdc97bab33ab",
                          "36bc2d42-bc96-4147-b451-bfe68bdfd60d"
                        ],
                        "failures": [],
                        "pending": [],
                        "skipped": [],
                        "duration": 21,
                        "root": false,
                        "rootEmpty": false,
                        "_timeout": 2000
                      },
                      {
                        "uuid": "96fda519-395d-4ba1-90cd-9e4e323b6849",
                        "title": "/DELETE/RESPONSES/ALL DELETE ALL RESPONSE",
                        "fullFile": "/Users/d058802/Documents/Node/sedacom/test/testapplication.js",
                        "file": "/test/testapplication.js",
                        "beforeHooks": [],
                        "afterHooks": [],
                        "tests": [
                          {
                            "title": "it should not DELETE RESPONSES for invalid APP ID or INTENT ID",
                            "fullTitle": "Apps Intents Intents-Response /POST create new Responses for the INTENT ID /DELETE/RESPONSES/ALL DELETE ALL RESPONSE it should not DELETE RESPONSES for invalid APP ID or INTENT ID",
                            "timedOut": false,
                            "duration": 4,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "code": "chai.request(server)\n    .delete('/apps/2347297492346dhakh393/intents/734hajdwedjw/responses/all')\n    .set('content-type', 'application/json')\n    .send().end((err, res) => {\n        expect(res).to.have.status(500)\n        done()\n    })",
                            "err": {},
                            "isRoot": false,
                            "uuid": "21c6eb73-5bd5-4239-8ff6-cb3670d8604a",
                            "isHook": false,
                            "skipped": false
                          },
                          {
                            "title": "it should DELETE ALL RESPONSES",
                            "fullTitle": "Apps Intents Intents-Response /POST create new Responses for the INTENT ID /DELETE/RESPONSES/ALL DELETE ALL RESPONSE it should DELETE ALL RESPONSES",
                            "timedOut": false,
                            "duration": 9,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "code": "chai.request(server)\n    .delete('/apps/' + newapp._id + '/intents/' + newintent._id + '/responses/all')\n    .set('content-type', 'application/json')\n    .send().end((err, res) => {\n        expect(res).to.have.status(201)\n        done()\n    })",
                            "err": {},
                            "isRoot": false,
                            "uuid": "a4017ca7-e76e-4401-bccd-486fd9b2b067",
                            "isHook": false,
                            "skipped": false
                          },
                          {
                            "title": "it should NOT DELETE RESPONSES.,Since its already Deleted",
                            "fullTitle": "Apps Intents Intents-Response /POST create new Responses for the INTENT ID /DELETE/RESPONSES/ALL DELETE ALL RESPONSE it should NOT DELETE RESPONSES.,Since its already Deleted",
                            "timedOut": false,
                            "duration": 4,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "code": "chai.request(server)\n    .delete('/apps/' + newapp._id + '/intents/' + newintent._id + '/responses/' + newresponse._id)\n    .set('content-type', 'application/json')\n    .send().end((err, res) => {\n        expect(res).to.have.status(405)\n        done()\n    })",
                            "err": {},
                            "isRoot": false,
                            "uuid": "1c35e370-1ad1-44ed-a6e2-53c0db07bc4e",
                            "isHook": false,
                            "skipped": false
                          }
                        ],
                        "suites": [],
                        "passes": [
                          "21c6eb73-5bd5-4239-8ff6-cb3670d8604a",
                          "a4017ca7-e76e-4401-bccd-486fd9b2b067",
                          "1c35e370-1ad1-44ed-a6e2-53c0db07bc4e"
                        ],
                        "failures": [],
                        "pending": [],
                        "skipped": [],
                        "duration": 17,
                        "root": false,
                        "rootEmpty": false,
                        "_timeout": 2000
                      }
                    ],
                    "passes": [],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 0,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 2000
                  }
                ],
                "passes": [],
                "failures": [],
                "pending": [],
                "skipped": [],
                "duration": 0,
                "root": false,
                "rootEmpty": false,
                "_timeout": 2000
              },
              {
                "uuid": "de994d59-2b1a-42dc-9c5c-a2d86f4d855b",
                "title": "Intents-Entities",
                "fullFile": "/Users/d058802/Documents/Node/sedacom/test/testapplication.js",
                "file": "/test/testapplication.js",
                "beforeHooks": [],
                "afterHooks": [],
                "tests": [],
                "suites": [
                  {
                    "uuid": "0a285bbf-5bbb-4fd5-bd41-d310bee63be0",
                    "title": "/POST create new Entities for the INTENT ID",
                    "fullFile": "/Users/d058802/Documents/Node/sedacom/test/testapplication.js",
                    "file": "/test/testapplication.js",
                    "beforeHooks": [],
                    "afterHooks": [],
                    "tests": [],
                    "suites": [
                      {
                        "uuid": "b8e9339b-f6f8-4013-bb4d-a0a60a8e451e",
                        "title": "/POST create new Entities for the INTENT ID",
                        "fullFile": "/Users/d058802/Documents/Node/sedacom/test/testapplication.js",
                        "file": "/test/testapplication.js",
                        "beforeHooks": [],
                        "afterHooks": [],
                        "tests": [
                          {
                            "title": "it should FAIL for invalid APP ID or INTENT ID",
                            "fullTitle": "Apps Intents Intents-Entities /POST create new Entities for the INTENT ID /POST create new Entities for the INTENT ID it should FAIL for invalid APP ID or INTENT ID",
                            "timedOut": false,
                            "duration": 3,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "code": "var entity = {\n    name: \"get\",\n    description: \"test mocha entity created\",\n    is_required: false\n}\nchai.request(server)\n    .post('/apps/472942942/intents/djadaldjaldj/entities/create')\n    .set('content-type', 'application/json')\n    .send(entity).end((err, res) => {\n        expect(res).to.have.status(500);\n        done()\n    })",
                            "err": {},
                            "isRoot": false,
                            "uuid": "6428c224-6403-4333-8968-ec389aacb906",
                            "isHook": false,
                            "skipped": false
                          },
                          {
                            "title": "it should not POST ENTITIES without NAME or DESCRIPTION propery",
                            "fullTitle": "Apps Intents Intents-Entities /POST create new Entities for the INTENT ID /POST create new Entities for the INTENT ID it should not POST ENTITIES without NAME or DESCRIPTION propery",
                            "timedOut": false,
                            "duration": 5,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "code": "var entity = {\n    description: \"Test entities created by mocha\"\n}\nchai.request(server)\n    .post('/apps/' + newapp._id + '/intents/' + newintent._id + '/entities/create')\n    .set('content-type', 'application/json')\n    .send(entity).end((err, res) => {\n        expect(res).to.have.status(500);\n        done()\n    })",
                            "err": {},
                            "isRoot": false,
                            "uuid": "386d63b9-20f9-4410-96fe-4c7b8f1a3f36",
                            "isHook": false,
                            "skipped": false
                          },
                          {
                            "title": "it should POST ENTITIES successfully",
                            "fullTitle": "Apps Intents Intents-Entities /POST create new Entities for the INTENT ID /POST create new Entities for the INTENT ID it should POST ENTITIES successfully",
                            "timedOut": false,
                            "duration": 9,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "code": "var entity = {\n    name: \"get\",\n    description: \"test mocha entity\",\n    is_required: false\n}\nchai.request(server)\n    .post('/apps/' + newapp._id + '/intents/' + newintent._id + '/entities/create')\n    .set('content-type', 'application/json')\n    .send(entity).end((err, res) => {\n        expect(res).to.have.status(201)\n        expect(res.body).should.have.a('object')\n        newentity = res.body.entities[0]\n        done()\n    })",
                            "err": {},
                            "isRoot": false,
                            "uuid": "798967c9-3ed4-497a-b006-f32e48e9fdbc",
                            "isHook": false,
                            "skipped": false
                          }
                        ],
                        "suites": [],
                        "passes": [
                          "6428c224-6403-4333-8968-ec389aacb906",
                          "386d63b9-20f9-4410-96fe-4c7b8f1a3f36",
                          "798967c9-3ed4-497a-b006-f32e48e9fdbc"
                        ],
                        "failures": [],
                        "pending": [],
                        "skipped": [],
                        "duration": 17,
                        "root": false,
                        "rootEmpty": false,
                        "_timeout": 2000
                      },
                      {
                        "uuid": "15972cc0-241a-4f1c-8f2d-71c739dd68df",
                        "title": "/GET/ENTITIES/ALL GET ALL ENTITIES",
                        "fullFile": "/Users/d058802/Documents/Node/sedacom/test/testapplication.js",
                        "file": "/test/testapplication.js",
                        "beforeHooks": [],
                        "afterHooks": [],
                        "tests": [
                          {
                            "title": "it should not GET ENTITIES for invalid APP ID or INTENT ID",
                            "fullTitle": "Apps Intents Intents-Entities /POST create new Entities for the INTENT ID /GET/ENTITIES/ALL GET ALL ENTITIES it should not GET ENTITIES for invalid APP ID or INTENT ID",
                            "timedOut": false,
                            "duration": 3,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "code": "chai.request(server)\n    .get('/apps/2347297492346dhakh393/intents/734hajdwedjw/entities/all')\n    .set('content-type', 'application/json')\n    .send().end((err, res) => {\n        expect(res).to.have.status(500)\n        done()\n    })",
                            "err": {},
                            "isRoot": false,
                            "uuid": "59252dec-cbdf-49b3-9a9e-b56650281c53",
                            "isHook": false,
                            "skipped": false
                          },
                          {
                            "title": "it should GET ALL ENTITIES for valid APP if exists or empty array",
                            "fullTitle": "Apps Intents Intents-Entities /POST create new Entities for the INTENT ID /GET/ENTITIES/ALL GET ALL ENTITIES it should GET ALL ENTITIES for valid APP if exists or empty array",
                            "timedOut": false,
                            "duration": 6,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "code": "chai.request(server)\n    .get('/apps/' + newapp._id + '/intents/' + newintent._id + '/entities/all')\n    .set('content-type', 'application/json')\n    .send().end((err, res) => {\n        expect(res).to.have.status(200)\n        res.body.should.be.an('array')\n        done()\n    })",
                            "err": {},
                            "isRoot": false,
                            "uuid": "ea4809a8-b88c-400d-983f-dad580e60de0",
                            "isHook": false,
                            "skipped": false
                          }
                        ],
                        "suites": [],
                        "passes": [
                          "59252dec-cbdf-49b3-9a9e-b56650281c53",
                          "ea4809a8-b88c-400d-983f-dad580e60de0"
                        ],
                        "failures": [],
                        "pending": [],
                        "skipped": [],
                        "duration": 9,
                        "root": false,
                        "rootEmpty": false,
                        "_timeout": 2000
                      },
                      {
                        "uuid": "27a5ca8e-f9b8-43ff-b809-1111e7bdcad6",
                        "title": "/PUT/ENTITIES/ALL UPDATE Entities BY ID",
                        "fullFile": "/Users/d058802/Documents/Node/sedacom/test/testapplication.js",
                        "file": "/test/testapplication.js",
                        "beforeHooks": [],
                        "afterHooks": [],
                        "tests": [
                          {
                            "title": "it should not UPDATE ENTITIES for invalid APP ID or INTENT ID",
                            "fullTitle": "Apps Intents Intents-Entities /POST create new Entities for the INTENT ID /PUT/ENTITIES/ALL UPDATE Entities BY ID it should not UPDATE ENTITIES for invalid APP ID or INTENT ID",
                            "timedOut": false,
                            "duration": 4,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "code": "chai.request(server)\n    .put('/apps/2347297492346dhakh393/intents/734hajdwedjw/entities/all')\n    .set('content-type', 'application/json')\n    .send().end((err, res) => {\n        expect(res).to.have.status(500)\n        done()\n    })",
                            "err": {},
                            "isRoot": false,
                            "uuid": "c59ceb6a-1f01-4919-a5d1-f7a6d0324f9f",
                            "isHook": false,
                            "skipped": false
                          },
                          {
                            "title": "it should not UPDATE ENTITIES without data",
                            "fullTitle": "Apps Intents Intents-Entities /POST create new Entities for the INTENT ID /PUT/ENTITIES/ALL UPDATE Entities BY ID it should not UPDATE ENTITIES without data",
                            "timedOut": false,
                            "duration": 4,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "code": "chai.request(server)\n    .put('/apps/' + newapp._id + '/intents/' + newintent._id + '/entities/' + newresponse._id)\n    .set('content-type', 'application/json')\n    .send().end((err, res) => {\n        expect(res).to.have.status(500)\n        done()\n    })",
                            "err": {},
                            "isRoot": false,
                            "uuid": "62545a9c-49b4-4ac6-9660-2639d552211a",
                            "isHook": false,
                            "skipped": false
                          },
                          {
                            "title": "it should UPDATE ENTITIES",
                            "fullTitle": "Apps Intents Intents-Entities /POST create new Entities for the INTENT ID /PUT/ENTITIES/ALL UPDATE Entities BY ID it should UPDATE ENTITIES",
                            "timedOut": false,
                            "duration": 11,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "code": "var entity = {\n    name: \"get\",\n    description: \"test mocha updated entity\",\n    is_required: false\n}\nchai.request(server)\n    .put('/apps/' + newapp._id + '/intents/' + newintent._id + '/entities/' + newresponse._id)\n    .set('content-type', 'application/json')\n    .send(entity).end((err, res) => {\n        expect(res).to.have.status(201)\n        done()\n    })",
                            "err": {},
                            "isRoot": false,
                            "uuid": "ea2053d4-54e9-406f-96b4-a81967421eab",
                            "isHook": false,
                            "skipped": false
                          }
                        ],
                        "suites": [],
                        "passes": [
                          "c59ceb6a-1f01-4919-a5d1-f7a6d0324f9f",
                          "62545a9c-49b4-4ac6-9660-2639d552211a",
                          "ea2053d4-54e9-406f-96b4-a81967421eab"
                        ],
                        "failures": [],
                        "pending": [],
                        "skipped": [],
                        "duration": 19,
                        "root": false,
                        "rootEmpty": false,
                        "_timeout": 2000
                      },
                      {
                        "uuid": "d46b6009-3b93-426e-ac79-9fc41b1369bf",
                        "title": "/DELETE/ENTITIES/ALL DELETE ALL ENTITIES",
                        "fullFile": "/Users/d058802/Documents/Node/sedacom/test/testapplication.js",
                        "file": "/test/testapplication.js",
                        "beforeHooks": [],
                        "afterHooks": [],
                        "tests": [
                          {
                            "title": "it should not DELETE ENTITIES for invalid APP ID or INTENT ID",
                            "fullTitle": "Apps Intents Intents-Entities /POST create new Entities for the INTENT ID /DELETE/ENTITIES/ALL DELETE ALL ENTITIES it should not DELETE ENTITIES for invalid APP ID or INTENT ID",
                            "timedOut": false,
                            "duration": 3,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "code": "chai.request(server)\n    .delete('/apps/2347297492346dhakh393/intents/734hajdwedjw/entities/all')\n    .set('content-type', 'application/json')\n    .send().end((err, res) => {\n        expect(res).to.have.status(500)\n        done()\n    })",
                            "err": {},
                            "isRoot": false,
                            "uuid": "0d394db1-f5d7-4176-9fe2-d401474fc45c",
                            "isHook": false,
                            "skipped": false
                          },
                          {
                            "title": "it should DELETE ALL ENTITIES",
                            "fullTitle": "Apps Intents Intents-Entities /POST create new Entities for the INTENT ID /DELETE/ENTITIES/ALL DELETE ALL ENTITIES it should DELETE ALL ENTITIES",
                            "timedOut": false,
                            "duration": 9,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "code": "chai.request(server)\n    .delete('/apps/' + newapp._id + '/intents/' + newintent._id + '/entities/all')\n    .set('content-type', 'application/json')\n    .send().end((err, res) => {\n        expect(res).to.have.status(201)\n        done()\n    })",
                            "err": {},
                            "isRoot": false,
                            "uuid": "f7f33422-a526-4091-81e1-21fbef73f532",
                            "isHook": false,
                            "skipped": false
                          },
                          {
                            "title": "it should NOT DELETE ENTITIES.,Since its already Deleted",
                            "fullTitle": "Apps Intents Intents-Entities /POST create new Entities for the INTENT ID /DELETE/ENTITIES/ALL DELETE ALL ENTITIES it should NOT DELETE ENTITIES.,Since its already Deleted",
                            "timedOut": false,
                            "duration": 5,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "code": "chai.request(server)\n    .delete('/apps/' + newapp._id + '/intents/' + newintent._id + '/entities/' + newentity._id)\n    .set('content-type', 'application/json')\n    .send().end((err, res) => {\n        expect(res).to.have.status(405)\n        done()\n    })",
                            "err": {},
                            "isRoot": false,
                            "uuid": "c25a2088-0d19-4d33-a542-b62ab46ca36c",
                            "isHook": false,
                            "skipped": false
                          }
                        ],
                        "suites": [],
                        "passes": [
                          "0d394db1-f5d7-4176-9fe2-d401474fc45c",
                          "f7f33422-a526-4091-81e1-21fbef73f532",
                          "c25a2088-0d19-4d33-a542-b62ab46ca36c"
                        ],
                        "failures": [],
                        "pending": [],
                        "skipped": [],
                        "duration": 17,
                        "root": false,
                        "rootEmpty": false,
                        "_timeout": 2000
                      }
                    ],
                    "passes": [],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 0,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 2000
                  }
                ],
                "passes": [],
                "failures": [],
                "pending": [],
                "skipped": [],
                "duration": 0,
                "root": false,
                "rootEmpty": false,
                "_timeout": 2000
              },
              {
                "uuid": "65af5f67-2611-4f06-a9b1-acff04f5c44a",
                "title": "Intents-Actions",
                "fullFile": "/Users/d058802/Documents/Node/sedacom/test/testapplication.js",
                "file": "/test/testapplication.js",
                "beforeHooks": [],
                "afterHooks": [],
                "tests": [],
                "suites": [
                  {
                    "uuid": "f2706cd2-58f3-412e-af40-d10f21b12039",
                    "title": "/POST create new Actions for the INTENT ID",
                    "fullFile": "/Users/d058802/Documents/Node/sedacom/test/testapplication.js",
                    "file": "/test/testapplication.js",
                    "beforeHooks": [],
                    "afterHooks": [],
                    "tests": [],
                    "suites": [
                      {
                        "uuid": "ede9f92a-1296-4bd8-ae25-49bc3c04b6f7",
                        "title": "/POST create new Actions for the INTENT ID",
                        "fullFile": "/Users/d058802/Documents/Node/sedacom/test/testapplication.js",
                        "file": "/test/testapplication.js",
                        "beforeHooks": [],
                        "afterHooks": [],
                        "tests": [
                          {
                            "title": "it should FAIL for invalid APP ID or INTENT ID",
                            "fullTitle": "Apps Intents Intents-Actions /POST create new Actions for the INTENT ID /POST create new Actions for the INTENT ID it should FAIL for invalid APP ID or INTENT ID",
                            "timedOut": false,
                            "duration": 4,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "code": "var action = {\n    destination: \"hcp destination\",\n    path: \"/dhajdakhd\",\n    method: \"get\"\n}\nchai.request(server)\n    .post('/apps/472942942/intents/djadaldjaldj/actions/create')\n    .set('content-type', 'application/json')\n    .send(action).end((err, res) => {\n        expect(res).to.have.status(500);\n        done()\n    })",
                            "err": {},
                            "isRoot": false,
                            "uuid": "bddcbd9a-e975-4ab4-a44d-321403ee9803",
                            "isHook": false,
                            "skipped": false
                          },
                          {
                            "title": "it should not POST ACTIONS without NAME or DESCRIPTION propery",
                            "fullTitle": "Apps Intents Intents-Actions /POST create new Actions for the INTENT ID /POST create new Actions for the INTENT ID it should not POST ACTIONS without NAME or DESCRIPTION propery",
                            "timedOut": false,
                            "duration": 6,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "code": "var action = {\n    description: \"Test entities created by mocha\"\n}\nchai.request(server)\n    .post('/apps/' + newapp._id + '/intents/' + newintent._id + '/actions/create')\n    .set('content-type', 'application/json')\n    .send(action).end((err, res) => {\n        expect(res).to.have.status(500);\n        done()\n    })",
                            "err": {},
                            "isRoot": false,
                            "uuid": "6f1ccf8a-45a6-4d79-8f02-e8e553c8f477",
                            "isHook": false,
                            "skipped": false
                          },
                          {
                            "title": "it should POST ACTIONS successfully",
                            "fullTitle": "Apps Intents Intents-Actions /POST create new Actions for the INTENT ID /POST create new Actions for the INTENT ID it should POST ACTIONS successfully",
                            "timedOut": false,
                            "duration": 9,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "code": "var action = {\n    destination: \"hcp destination\",\n    path: \"/dhajdakhd\",\n    method: \"get\"\n}\nchai.request(server)\n    .post('/apps/' + newapp._id + '/intents/' + newintent._id + '/actions/create')\n    .set('content-type', 'application/json')\n    .send(action).end((err, res) => {\n        expect(res).to.have.status(201)\n        expect(res.body).should.have.a('object')\n        newaction = res.body.actions[0]\n        done()\n    })",
                            "err": {},
                            "isRoot": false,
                            "uuid": "ba793d3a-df82-4ad6-b17f-c801ceca9d94",
                            "isHook": false,
                            "skipped": false
                          }
                        ],
                        "suites": [],
                        "passes": [
                          "bddcbd9a-e975-4ab4-a44d-321403ee9803",
                          "6f1ccf8a-45a6-4d79-8f02-e8e553c8f477",
                          "ba793d3a-df82-4ad6-b17f-c801ceca9d94"
                        ],
                        "failures": [],
                        "pending": [],
                        "skipped": [],
                        "duration": 19,
                        "root": false,
                        "rootEmpty": false,
                        "_timeout": 2000
                      },
                      {
                        "uuid": "6b05fb6e-f146-4856-a73d-b2b24807c5ce",
                        "title": "/GET/ACTIONS/ALL GET ALL ENTITIES",
                        "fullFile": "/Users/d058802/Documents/Node/sedacom/test/testapplication.js",
                        "file": "/test/testapplication.js",
                        "beforeHooks": [],
                        "afterHooks": [],
                        "tests": [
                          {
                            "title": "it should not GET ACTIONS for invalid APP ID or INTENT ID",
                            "fullTitle": "Apps Intents Intents-Actions /POST create new Actions for the INTENT ID /GET/ACTIONS/ALL GET ALL ENTITIES it should not GET ACTIONS for invalid APP ID or INTENT ID",
                            "timedOut": false,
                            "duration": 3,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "code": "chai.request(server)\n    .get('/apps/2347297492346dhakh393/intents/734hajdwedjw/actions/all')\n    .set('content-type', 'application/json')\n    .send().end((err, res) => {\n        expect(res).to.have.status(500)\n        done()\n    })",
                            "err": {},
                            "isRoot": false,
                            "uuid": "4a78866a-5f60-43c4-a373-4bccd80c3282",
                            "isHook": false,
                            "skipped": false
                          },
                          {
                            "title": "it should GET ALL Actions for valid APP if exists or empty array",
                            "fullTitle": "Apps Intents Intents-Actions /POST create new Actions for the INTENT ID /GET/ACTIONS/ALL GET ALL ENTITIES it should GET ALL Actions for valid APP if exists or empty array",
                            "timedOut": false,
                            "duration": 6,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "code": "chai.request(server)\n    .get('/apps/' + newapp._id + '/intents/' + newintent._id + '/actions/all')\n    .set('content-type', 'application/json')\n    .send().end((err, res) => {\n        expect(res).to.have.status(200)\n        res.body.should.be.an('array')\n        done()\n    })",
                            "err": {},
                            "isRoot": false,
                            "uuid": "79497c06-2d72-4c0a-b411-8aee4e810995",
                            "isHook": false,
                            "skipped": false
                          }
                        ],
                        "suites": [],
                        "passes": [
                          "4a78866a-5f60-43c4-a373-4bccd80c3282",
                          "79497c06-2d72-4c0a-b411-8aee4e810995"
                        ],
                        "failures": [],
                        "pending": [],
                        "skipped": [],
                        "duration": 9,
                        "root": false,
                        "rootEmpty": false,
                        "_timeout": 2000
                      },
                      {
                        "uuid": "631257bb-dc28-40d0-8529-2aa898c54cf4",
                        "title": "/PUT/ACTIONS/ALL UPDATE ACtions BY ID",
                        "fullFile": "/Users/d058802/Documents/Node/sedacom/test/testapplication.js",
                        "file": "/test/testapplication.js",
                        "beforeHooks": [],
                        "afterHooks": [],
                        "tests": [
                          {
                            "title": "it should not UPDATE ACTIONS for invalid APP ID or INTENT ID",
                            "fullTitle": "Apps Intents Intents-Actions /POST create new Actions for the INTENT ID /PUT/ACTIONS/ALL UPDATE ACtions BY ID it should not UPDATE ACTIONS for invalid APP ID or INTENT ID",
                            "timedOut": false,
                            "duration": 3,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "code": "chai.request(server)\n    .put('/apps/2347297492346dhakh393/intents/734hajdwedjw/actions/all')\n    .set('content-type', 'application/json')\n    .send().end((err, res) => {\n        expect(res).to.have.status(500)\n        done()\n    })",
                            "err": {},
                            "isRoot": false,
                            "uuid": "3978c819-e762-42be-b896-5d6eff86eba9",
                            "isHook": false,
                            "skipped": false
                          },
                          {
                            "title": "it should not UPDATE ACTIONS without data",
                            "fullTitle": "Apps Intents Intents-Actions /POST create new Actions for the INTENT ID /PUT/ACTIONS/ALL UPDATE ACtions BY ID it should not UPDATE ACTIONS without data",
                            "timedOut": false,
                            "duration": 5,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "code": "chai.request(server)\n    .put('/apps/' + newapp._id + '/intents/' + newintent._id + '/actions/' + newaction._id)\n    .set('content-type', 'application/json')\n    .send().end((err, res) => {\n        expect(res).to.have.status(500)\n        done()\n    })",
                            "err": {},
                            "isRoot": false,
                            "uuid": "7c558045-e95a-469e-bb81-772cc838a76e",
                            "isHook": false,
                            "skipped": false
                          },
                          {
                            "title": "it should UPDATE ACTIONS",
                            "fullTitle": "Apps Intents Intents-Actions /POST create new Actions for the INTENT ID /PUT/ACTIONS/ALL UPDATE ACtions BY ID it should UPDATE ACTIONS",
                            "timedOut": false,
                            "duration": 9,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "code": "var action = {\n    destination: \"hcp destination\",\n    path: \"/dhajdakhd\",\n    method: \"get\"\n}\nchai.request(server)\n    .put('/apps/' + newapp._id + '/intents/' + newintent._id + '/actions/' + newaction._id)\n    .set('content-type', 'application/json')\n    .send(action).end((err, res) => {\n        expect(res).to.have.status(201)\n        done()\n    })",
                            "err": {},
                            "isRoot": false,
                            "uuid": "a32af64e-0e74-47c4-99f5-a8cd2c353996",
                            "isHook": false,
                            "skipped": false
                          }
                        ],
                        "suites": [],
                        "passes": [
                          "3978c819-e762-42be-b896-5d6eff86eba9",
                          "7c558045-e95a-469e-bb81-772cc838a76e",
                          "a32af64e-0e74-47c4-99f5-a8cd2c353996"
                        ],
                        "failures": [],
                        "pending": [],
                        "skipped": [],
                        "duration": 17,
                        "root": false,
                        "rootEmpty": false,
                        "_timeout": 2000
                      },
                      {
                        "uuid": "0807dda4-7963-47ab-9ced-0e073e3fe0d6",
                        "title": "/DELETE/ACTIONS/ALL DELETE ALL ACTIONS",
                        "fullFile": "/Users/d058802/Documents/Node/sedacom/test/testapplication.js",
                        "file": "/test/testapplication.js",
                        "beforeHooks": [],
                        "afterHooks": [],
                        "tests": [
                          {
                            "title": "it should not DELETE ACTIONS for invalid APP ID or INTENT ID",
                            "fullTitle": "Apps Intents Intents-Actions /POST create new Actions for the INTENT ID /DELETE/ACTIONS/ALL DELETE ALL ACTIONS it should not DELETE ACTIONS for invalid APP ID or INTENT ID",
                            "timedOut": false,
                            "duration": 6,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "code": "chai.request(server)\n    .delete('/apps/2347297492346dhakh393/intents/734hajdwedjw/actions/all')\n    .set('content-type', 'application/json')\n    .send().end((err, res) => {\n        expect(res).to.have.status(500)\n        done()\n    })",
                            "err": {},
                            "isRoot": false,
                            "uuid": "39be9d79-bef3-4e13-b15b-0505634ee2a6",
                            "isHook": false,
                            "skipped": false
                          },
                          {
                            "title": "it should DELETE ALL ACTIONS",
                            "fullTitle": "Apps Intents Intents-Actions /POST create new Actions for the INTENT ID /DELETE/ACTIONS/ALL DELETE ALL ACTIONS it should DELETE ALL ACTIONS",
                            "timedOut": false,
                            "duration": 9,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "code": "chai.request(server)\n    .delete('/apps/' + newapp._id + '/intents/' + newintent._id + '/actions/all')\n    .set('content-type', 'application/json')\n    .send().end((err, res) => {\n        expect(res).to.have.status(201)\n        done()\n    })",
                            "err": {},
                            "isRoot": false,
                            "uuid": "429033b5-322c-4f62-b964-3d1db9ab4557",
                            "isHook": false,
                            "skipped": false
                          },
                          {
                            "title": "it should NOT DELETE ACTIONS.,Since its already Deleted",
                            "fullTitle": "Apps Intents Intents-Actions /POST create new Actions for the INTENT ID /DELETE/ACTIONS/ALL DELETE ALL ACTIONS it should NOT DELETE ACTIONS.,Since its already Deleted",
                            "timedOut": false,
                            "duration": 4,
                            "state": "passed",
                            "speed": "fast",
                            "pass": true,
                            "fail": false,
                            "pending": false,
                            "code": "chai.request(server)\n    .delete('/apps/' + newapp._id + '/intents/' + newintent._id + '/actions/' + newentity._id)\n    .set('content-type', 'application/json')\n    .send().end((err, res) => {\n        expect(res).to.have.status(405)\n        done()\n    })",
                            "err": {},
                            "isRoot": false,
                            "uuid": "d95bc0dc-4097-4320-9fc4-f78cbddc308e",
                            "isHook": false,
                            "skipped": false
                          }
                        ],
                        "suites": [],
                        "passes": [
                          "39be9d79-bef3-4e13-b15b-0505634ee2a6",
                          "429033b5-322c-4f62-b964-3d1db9ab4557",
                          "d95bc0dc-4097-4320-9fc4-f78cbddc308e"
                        ],
                        "failures": [],
                        "pending": [],
                        "skipped": [],
                        "duration": 19,
                        "root": false,
                        "rootEmpty": false,
                        "_timeout": 2000
                      }
                    ],
                    "passes": [],
                    "failures": [],
                    "pending": [],
                    "skipped": [],
                    "duration": 0,
                    "root": false,
                    "rootEmpty": false,
                    "_timeout": 2000
                  }
                ],
                "passes": [],
                "failures": [],
                "pending": [],
                "skipped": [],
                "duration": 0,
                "root": false,
                "rootEmpty": false,
                "_timeout": 2000
              },
              {
                "uuid": "38d015ce-5c38-419b-a23e-621d1cd7a98d",
                "title": "/DELETE/INTENT/BYID DELETE Intents by ID",
                "fullFile": "/Users/d058802/Documents/Node/sedacom/test/testapplication.js",
                "file": "/test/testapplication.js",
                "beforeHooks": [],
                "afterHooks": [],
                "tests": [
                  {
                    "title": "it should not DELETE Intents for invalid APP",
                    "fullTitle": "Apps Intents /DELETE/INTENT/BYID DELETE Intents by ID it should not DELETE Intents for invalid APP",
                    "timedOut": false,
                    "duration": 4,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "chai.request(server)\n    .delete('/apps/2347297492346dhakh393/intents/' + newintent._id)\n    .set('content-type', 'application/json')\n    .send().end((err, res) => {\n        expect(res).to.have.status(500)\n        done()\n    })",
                    "err": {},
                    "isRoot": false,
                    "uuid": "e41cec93-f7aa-4a34-aadd-741d7663f7d1",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "it should DELETE intent the app by ID and Intent ID",
                    "fullTitle": "Apps Intents /DELETE/INTENT/BYID DELETE Intents by ID it should DELETE intent the app by ID and Intent ID",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "chai.request(server)\n    .delete('/apps/' + newapp._id + '/intents/' + newintent._id)\n    .send().end((err, res) => {\n        expect(res).to.have.status(200)\n        done()\n    })",
                    "err": {},
                    "isRoot": false,
                    "uuid": "c0611140-6efd-403c-aa55-8c4558816788",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "it should not FIND the INTENT in db which is deleted",
                    "fullTitle": "Apps Intents /DELETE/INTENT/BYID DELETE Intents by ID it should not FIND the INTENT in db which is deleted",
                    "timedOut": false,
                    "duration": 5,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "chai.request(server)\n    .get('/apps/' + newapp._id + '/intents/' + newintent._id)\n    .send().end((err, res) => {\n        expect(res).to.have.status(405)\n        done()\n    })",
                    "err": {},
                    "isRoot": false,
                    "uuid": "20d8b934-dbab-4296-a38c-6b8bf6ab64d1",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "suites": [],
                "passes": [
                  "e41cec93-f7aa-4a34-aadd-741d7663f7d1",
                  "c0611140-6efd-403c-aa55-8c4558816788",
                  "20d8b934-dbab-4296-a38c-6b8bf6ab64d1"
                ],
                "failures": [],
                "pending": [],
                "skipped": [],
                "duration": 12,
                "root": false,
                "rootEmpty": false,
                "_timeout": 2000
              }
            ],
            "passes": [],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "542ceba0-cdd7-4847-b864-63ec0c6af0c4",
            "title": "GENERAL",
            "fullFile": "/Users/d058802/Documents/Node/sedacom/test/testapplication.js",
            "file": "/test/testapplication.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [],
            "suites": [
              {
                "uuid": "e9ae2ee9-57aa-418d-9b94-eb98956f005a",
                "title": "/OAUTH/TOKEN Generate JWT TOKEN",
                "fullFile": "/Users/d058802/Documents/Node/sedacom/test/testapplication.js",
                "file": "/test/testapplication.js",
                "beforeHooks": [],
                "afterHooks": [],
                "tests": [
                  {
                    "title": "it should NOT GENERATE TOKEN for No Credentials",
                    "fullTitle": "Apps GENERAL /OAUTH/TOKEN Generate JWT TOKEN it should NOT GENERATE TOKEN for No Credentials",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "chai.request(server)\n    .post('/oauth/token')\n    .send().end((err, res) => {\n        expect(res).to.have.status(405)\n        done()\n    })",
                    "err": {},
                    "isRoot": false,
                    "uuid": "042faa09-40cf-4e59-8efe-fd22865fd16e",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "it should GENERATE TOKEN Credentials",
                    "fullTitle": "Apps GENERAL /OAUTH/TOKEN Generate JWT TOKEN it should GENERATE TOKEN Credentials",
                    "timedOut": false,
                    "duration": 6,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var credentials = {\n    clientid: newapp.credentials.clientid,\n    clientsecret: newapp.credentials.clientsecret\n}\nchai.request(server)\n    .post('/oauth/token')\n    .send(credentials).end((err, res) => {\n        expect(res).to.have.status(201)\n        res.body.should.have.a('object')                        \n        jwttoken = res.body\n        done()\n    })",
                    "err": {},
                    "isRoot": false,
                    "uuid": "7187b921-0448-4553-ba5d-8daf7adde30c",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "suites": [],
                "passes": [
                  "042faa09-40cf-4e59-8efe-fd22865fd16e",
                  "7187b921-0448-4553-ba5d-8daf7adde30c"
                ],
                "failures": [],
                "pending": [],
                "skipped": [],
                "duration": 9,
                "root": false,
                "rootEmpty": false,
                "_timeout": 2000
              },
              {
                "uuid": "fed18ffd-f398-4633-9695-2118c71ca954",
                "title": "/PARSE Parse Route",
                "fullFile": "/Users/d058802/Documents/Node/sedacom/test/testapplication.js",
                "file": "/test/testapplication.js",
                "beforeHooks": [],
                "afterHooks": [],
                "tests": [
                  {
                    "title": "it should FAIL WITHOUT JWTToken",
                    "fullTitle": "Apps GENERAL /PARSE Parse Route it should FAIL WITHOUT JWTToken",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "chai.request(server)\n    .post('/parse')\n    .set('content-type', 'application/json')\n    .send().end((err, res) => {\n        expect(res).to.have.status(401)\n        done()\n    })",
                    "err": {},
                    "isRoot": false,
                    "uuid": "ae6afe24-bc3a-418e-ae99-f6cebf220295",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "it should FAIL WITHOUT Text Property",
                    "fullTitle": "Apps GENERAL /PARSE Parse Route it should FAIL WITHOUT Text Property",
                    "timedOut": false,
                    "duration": 6,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "chai.request(server)\n    .post('/parse')\n    .set('content-type', 'application/json')\n    .set('Authorization', jwttoken.token)\n    .send().end((err, res) => {\n        expect(res).to.have.status(405)\n        done()\n    })",
                    "err": {},
                    "isRoot": false,
                    "uuid": "85d44d93-1ab0-4634-92e2-30a3d0e162eb",
                    "isHook": false,
                    "skipped": false
                  },
                  {
                    "title": "it should PASS WITH Text Property",
                    "fullTitle": "Apps GENERAL /PARSE Parse Route it should PASS WITH Text Property",
                    "timedOut": false,
                    "duration": 172,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "var oinput = {\n    text : \"get my deals\"\n}\nchai.request(server)\n    .post('/parse')\n    .set('content-type', 'application/json')\n    .set('Authorization', jwttoken.token)\n    .send(oinput).end((err, res) => {\n        expect(res).to.have.status(500)\n        done()\n    })",
                    "err": {},
                    "isRoot": false,
                    "uuid": "647ad57b-a760-4dd6-a74c-b63e1a6e740b",
                    "isHook": false,
                    "skipped": false
                  }
                ],
                "suites": [],
                "passes": [
                  "ae6afe24-bc3a-418e-ae99-f6cebf220295",
                  "85d44d93-1ab0-4634-92e2-30a3d0e162eb",
                  "647ad57b-a760-4dd6-a74c-b63e1a6e740b"
                ],
                "failures": [],
                "pending": [],
                "skipped": [],
                "duration": 181,
                "root": false,
                "rootEmpty": false,
                "_timeout": 2000
              }
            ],
            "passes": [],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 0,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          },
          {
            "uuid": "e7da62f7-3b21-4d4d-a831-091013f145ff",
            "title": "/DELETE/APPID Delete app by ID",
            "fullFile": "/Users/d058802/Documents/Node/sedacom/test/testapplication.js",
            "file": "/test/testapplication.js",
            "beforeHooks": [],
            "afterHooks": [],
            "tests": [
              {
                "title": "it should DELETE the app by ID",
                "fullTitle": "Apps /DELETE/APPID Delete app by ID it should DELETE the app by ID",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai.request(server)\n    .delete('/apps/' + newapp._id)\n    .send().end((err, res) => {\n        expect(res).to.have.status(200)\n        done()\n    })",
                "err": {},
                "isRoot": false,
                "uuid": "81938519-4293-4fe3-be30-14e2e9740473",
                "isHook": false,
                "skipped": false
              },
              {
                "title": "it should not find the app in db which is deleted",
                "fullTitle": "Apps /DELETE/APPID Delete app by ID it should not find the app in db which is deleted",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "chai.request(server)\n    .get('/apps/' + newapp._id)\n    .send().end((err, res) => {\n        expect(res).to.have.status(500)\n        done()\n    })",
                "err": {},
                "isRoot": false,
                "uuid": "8b5169bb-06c8-4d57-8d73-239d9b3f0ec4",
                "isHook": false,
                "skipped": false
              }
            ],
            "suites": [],
            "passes": [
              "81938519-4293-4fe3-be30-14e2e9740473",
              "8b5169bb-06c8-4d57-8d73-239d9b3f0ec4"
            ],
            "failures": [],
            "pending": [],
            "skipped": [],
            "duration": 8,
            "root": false,
            "rootEmpty": false,
            "_timeout": 2000
          }
        ],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 0,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2018
}